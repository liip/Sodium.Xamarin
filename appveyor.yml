environment:
  PKG_VERSION: 0.0.1
  VERSION_SUFFIX: ""
version: ${PKG_VERSION}-{build}
configuration: Release
platform: x64
image: Visual Studio 2017

skip_commits:
  message: /chore/
  files:
    - '**\*.md'
    - LICENSE

skip_branch_with_pr: true

matrix:
  fast_finish: true

init:
  - git config --global core.autocrlf input
  - ps: $env:BUILD_VERSION = "$env:PKG_VERSION-$env:APPVEYOR_BUILD_NUMBER"
  - ps: |
      if ($env:APPVEYOR_REPO_BRANCH -eq "master")
      {
        $env:VERSION_SUFFIX = ""
        $env:NUGET_VERSION = "$env:PKG_VERSION"
      }
      else
      {
        $env:VERSION_SUFFIX = "beta$env:APPVEYOR_BUILD_NUMBER"
        $env:NUGET_VERSION = "$env:PKG_VERSION-$env:VERSION_SUFFIX"
      }
  - ps: Update-AppveyorBuild -Version $env:BUILD_VERSION
  - ps: Write-Host "Build version $env:BUILD_VERSION, NuGet version $env:NUGET_VERSION, Version suffix $env:VERSION_SUFFIX"

before_build:
  - appveyor-retry dotnet restore -v Minimal

build_script:
  - ps: |
      if ($env:APPVEYOR_REPO_BRANCH -eq "master")
      {
        msbuild /t:pack /p:Configuration=$env:CONFIGURATION /p:OutputPath=$env:APPVEYOR_BUILD_FOLDER\artifacts libsodium-core.sln
      }
      else
      {
        msbuild /t:pack /p:Configuration=$env:CONFIGURATION /p:OutputPath=$env:APPVEYOR_BUILD_FOLDER\artifacts /p:version-suffix=$env:VERSION_SUFFIX libsodium-core.sln
      }

test: off

test_script:
  - dotnet test --configuration Debug --framework netcoreapp2.0 --logger trx;logfilename=TestResult.xml --results-directory "%APPVEYOR_BUILD_FOLDER%\test\Sodium.Tests\TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover %APPVEYOR_BUILD_FOLDER%\test\Sodium.Tests\Sodium.Tests.csproj

after_test:
  - ps: |
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/xunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test\Sodium.Tests\TestResults\TestResult*.xml))

on_success:
  - choco install codecov
  - codecov -f "%APPVEYOR_BUILD_FOLDER%\test\Sodium.Tests\coverage.xml"

artifacts:
  - path: artifacts\**\*.nupkg

cache:
  - '%USERPROFILE%\.local'
  - '%USERPROFILE%\.nuget\packages -> **\*.csproj'
  - '%LocalAppData%\NuGet\Cache'
  - '%LocalAppData%\Python'
  - '.\packages -> **\*.csproj'
  - '.\tools'
  - '\Python34'

nuget:
  account_feed: true

deploy:
  - provider: NuGet
    api_key:
      secure: HS+AVSCmEzHGcITHZJsQVLXvDpkURCQ1YOzH9dw0yVS+hqP4EIBFFM/3VGb7UGbN
    on:
      branch:
        - master
        - nuget
      appveyor_repo_tag: true
  - provider: GitHub
    description: "Release description"
    auth_token:
      secure: 1J52zPBOA8m7c6tVTvPbKw5oFdoEXCZ6Y9F67ypZy8V4Bg9FasTF+MffvH58vQ3c
    artifact: /.*\.nupkg/ # upload all NuGet packages to release assets
    draft: false
    prerelease: false
    on:
      branch:
        - master
        - nuget
      appveyor_repo_tag: true
